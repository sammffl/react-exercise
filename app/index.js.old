/**
 * @Author: shenyu <SamMFFL>
 * @Date:   2016/08/30 11:31:32
 * @Email:  shenyu902@pingan.com.cn
 * @Last modified by:   SamMFFL
 * @Last modified time: 2016/08/30 13:55:56
 */


import React from 'react';
import ReactDOM from 'react-dom';
// import ProductCategoryRow from './components/productCategoryRow';
// import ProductRow from './components/productRow';
// import ProductTable from ‘./components/productTable’;
// import SearchBar from './components/searchBar';
 // import FilterableProductTable from './components/filterableProductTable.js'

let mock =[
  {category: "Sporting Goods", price: "$49.99", stocked: true, name: "Football"},
  {category: "Sporting Goods", price: "$9.99", stocked: true, name: "Baseball"},
  {category: "Sporting Goods", price: "$29.99", stocked: false, name: "Basketball"},
  {category: "Electronics", price: "$99.99", stocked: true, name: "iPod Touch"},
  {category: "Electronics", price: "$399.99", stocked: false, name: "iPhone 5"},
  {category: "Electronics", price: "$199.99", stocked: true, name: "Nexus 7"}
];


class ProductCategoryRow extends React.Component {
    render() {
        return (
            <tr>
                <th colSpan="2">
                    {this.props.category}
                </th>
            </tr>
        );
    }
}


class ProductRow extends React.Component {
    render() {
        let name = this.props.product.stocked ?
            this.props.product.name:
            <span style={{color:'red'}}>{this.props.product.name}</span>

        return (
            <tr>
                <td>{name}</td>
                <td>{this.props.product.price}</td>
            </tr>
        );
    }
}

class ProductTable extends React.Component {
    render() {
        let rows = [];
        let lastCategory = null;
        this.props.products.forEach(function(product){

            if(product.name.indexOf(this.props.filterText)=== -1 ||
               (!product.stocked && this.props.inStockOnly)){
                return;
            }

            if(product.category !== lastCategory){
                rows.push(<ProductCategoryRow category={product.category} key={product.category} />);
            }
            rows.push(<ProductRow product={product} key={product.name} />)
            lastCategory = product.category
        }.bind(this));

        return (
            <table>
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Price</th>
                    </tr>
                </thead>
                <tbody>{rows}</tbody>
            </table>
        );
    }
}

class SearchBar extends React.Component {

    constructor(props){
        super(props);
        this._handleChange.bind(this);
        console.log(props);
    }

    _handleChange() {
        console.log('_handleChange')
        console.log(this);
        this.props.onUserInput(
            this.refs.filterTextInput.value,
            this.refs.inStockOnlyInput.checked
        );
    }

    render(){
        return (
            <form>
                <input
                    type="text"
                    placeholder="Search..."
                    value={this.props.filterText}
                    ref="filterTextInput"
                    // onChange={this._handleChange}
                    onChange={this._handleChange.bind(this)}
                />
                <p>
                    <input
                        type="checkbox"
                        checked={this.props.inStockOnly}
                        ref="inStockOnlyInput"
                        onChange={this._handleChange.bind(this)}
                    />
                    {' '}
                    Only show products in stock
                </p>
            </form>
        );
    }
}


class FilterableProductTable extends React.Component {

    constructor(props) {
        super(props);
        this.state = {
            filterText: '',
            inStockOnly: false
        }
        this._handleUserInput = this._handleUserInput.bind(this);

    }

    _handleUserInput(filterText, inStockOnly){
        this.setState({
            filterText:filterText,
            inStockOnly:inStockOnly
        })
    }
    // static initialState(props) {
    //     return {
    //         filterText: '',
    //         inStockOnly: false
    //     };
    // }
    render() {
        return (
            <div>
                <SearchBar
                    filterText={this.state.filterText}
                    inStockOnly={this.state.inStockOnly}
                    onUserInput={this._handleUserInput}
                />
                <ProductTable
                    products={this.props.products}
                    filterText={this.state.filterText}
                    inStockOnly={this.state.inStockOnly}
                />

            </div>
        );
    }
}


ReactDOM.render(
    <FilterableProductTable products={mock} /> ,
    document.getElementById('content')
)
